// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot;

/**
 * The Constants class provides a convenient place for teams to hold robot-wide numerical or boolean
 * constants.  This class should not be used for any other purpose.  All constants should be
 * declared globally (i.e. public static).  Do not put anything functional in this class.
 *
 * <p>It is advised to statically import this class (or one of its inner classes) wherever the
 * constants are needed, to reduce verbosity.
 */
public class Constants {
   /**
    * public static final class DriveConstants {
    *   public static final int kLeftMotor1Port = 0;
    *   public static final int kLeftMotor2Port = 1;
    *   public static final int kRightMotor1Port = 2;
    *   public static final int kRightMotor2Port = 3; 
    * }
    */ 
    
    // public static final double ARM_CONSTANT_P = 0;
    // public static final double ARM_CONSATNT_D = 0;
    // public static final int ARM_CONSATNT_MOTOR_PORT = 0;
    // public static final int POTENIOMETER_PORT = 0;
    // public static final double POTENIOMETER_RANGE = 0;
    // public static final double POTENIOMETER_OFFSET = 0;
    
    public static final double AUTO_TIME=15;
    public static final double AUTO_CONEYOR_TIME=5;

    public static final class ChassisConst{
        // public static final int LEFT_FRONT_PORT = 1;
        // public static final int LEFT_FOLLOWER_PORT = 2;
        // public static final int RIGHT_FRONT_PORT = 3;
        // public static final int RIGHT_FOLLOWER_PORT = 4;

        public static final double WHEEL_TRACK = 5.25;
        public static final double WHEEL_DIAMETER = 6.0; //KZ: inches, the wheel diameter of our robot

        // public static final double PULSES_PER_REVOLUTION = 360.0; // KZ: Our wheel encoder
        // public static final double INCHES_PER_DEGREE = Math.PI *WHEEL_DIAMETER / 360.0;
        // public static final double INCHES_PER_PULSE = Math.PI * WHEEL_DIAMETER / PULSES_PER_REVOLUTION; //KZ: Moving distance per pulse

        public static final int CANCODER_COUNT_PER_REVOLUTION  = 4096;
        public static final double CANCODER_DISTANCE_PER_DEGREE = Math.PI *WHEEL_DIAMETER / 360.0;
        public static final double CANCODE_DISTANCE_PER_COUNT = Math.PI*WHEEL_DIAMETER / CANCODER_COUNT_PER_REVOLUTION;
            // Assumes the encoders are directly mounted on the wheel shafts
 
    
 
    }

    public static final class IntakeConst{
        public static final double INTAKE_STRENGTH = 0.6;        
    }

    public static final class ConveyorConst{
        public static final double CONVEY_STRENGTH = -1.0;        
    }


}

